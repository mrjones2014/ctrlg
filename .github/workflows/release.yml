name: Release to crates.io
on:
  push:
    tags:
      - 'v*'

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Check Formatting, Linting, and Tests
        run: make check

  build-assets:
    needs: [checks]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build Release Mac M1
        if: matrix.os == 'macos-latest'
        run: make build-mac-m1
      - name: Upload MacOS M1 Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v2
        with:
          name: ctrlg-macos-arm
          path: ./release/ctrlg-macos-arm

      - name: Build Release Mac x86
        if: matrix.os == 'macos-latest'
        run: make build-mac-x86
      - name: Upload MacOS x86 Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v2
        with:
          name: ctrlg-macos-x86
          path: ./release/ctrlg-macos-x86

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: make build-linux
      - name: Upload Linux x86 Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v2
        with:
          name: ctrlg-linux-x86
          path: ./release/ctrlg-linux-x86

  create-github-release:
    runs-on: ubuntu-latest
    needs: [build-assets]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          fail_on_unmatched_files: true
          prerelease: ${{ contains(github.ref, '-') }}
          files: |
            ./release/ctrlg-macos-arm
            ./release/ctrlg-macos-x86
            ./release/ctrlg-linux-x86
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cargo-publish:
    runs-on: ubuntu-latest
    needs: [checks]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Cargo Publish
        env:
          CARGO_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: make publish
